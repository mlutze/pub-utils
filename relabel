#!/usr/bin/env python3

import shutil
import sys
import os
import re
from tempfile import TemporaryDirectory
from typing import Mapping

def get_tex_files(root: str) -> list[str]:
    """Returns the list of TeX files under the given root directory."""
    files: list[str] = []
    for (dir_name, _, file_names) in os.walk(root):
        for file_name in file_names:
            if file_name.endswith(".tex"):
                files.append(os.path.join(dir_name, file_name))
            else:
                pass
    return files

def multiple_replace(text: str, mapping: Mapping[str, str]) -> str:
  """Replace strings in the text according to the dictionary."""
  # https://code.activestate.com/recipes/81330-single-pass-multiple-replace/
  regex = re.compile("(%s)" % "|".join(map(re.escape, mapping.keys())))
  return regex.sub(lambda mo: mapping[mo.string[mo.start():mo.end()]], text) 
        
def replace_in_file(file_name: str, mapping: Mapping[str, str]) -> None:
    """Replaces text according to the mapping in the given file."""
    with open(file_name) as file:
        with TemporaryDirectory() as tmp_dir_name:
            tmp_file_name = tmp_dir_name + "/" + "tmp.tex"
            with open(tmp_file_name, "+w") as tmp_file:
                for line in file:
                    tmp_file.write(multiple_replace(line, mapping))
            shutil.copyfile(tmp_file_name, file_name)




prefix = sys.argv[1]

# get all the labels
labels = set()

for file in get_tex_files("."):
    with open(file) as handle:
        for line in handle:
            for label in re.findall(r"\\label\{(.*?)\}", line):
                labels.add(label)

# map macro to prefixed macro
mapping = {}
for label in labels:
    k = "\\ref{" + label + "}"
    v = "\\ref{" + prefix + label + "}"
    mapping[k] = v
    k = "\\label{" + label + "}"
    v = "\\label{" + prefix + label + "}"
    mapping[k] = v

# execute the mapping
for file in get_tex_files("."):
    replace_in_file(file, mapping)
